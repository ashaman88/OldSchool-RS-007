{}

var
  SRL_SavePath: string;        // the path to save log files
  SRL_StartTime: string;       // the time the script starts (used to name log file)
  SRL_DisableLogging: boolean; // gives the scripter the option to disable

procedure TakeScreen(Reason: string);
begin
  if (not DirectoryExists(SRL_SavePath)) then
    ForceDirectories(SRL_SavePath);

  try
    if FileExists(SRL_SavePath + reason + ' ' + Players[CurrentPlayer].Name + '.png') then
      SaveScreenshot(SRL_SavePath + reason + ' ' + Players[CurrentPlayer].Name + ' ' + TimeRunning + '.png')
    else
      SaveScreenshot(SRL_SavePath + reason + ' ' + Players[CurrentPlayer].Name + '.png');

    WriteLn('Screenshot of: ' + reason + ' ' + TimeRunning);
  except
    Writeln('Failed to save screenshot of: ' + reason);
  end
end;

function OpenSRLLogFile(): integer;
var
  fileName: string;
begin
  if (SRL_DisableLogging) then
    exit;

  if (not directoryExists(SRL_SavePath)) then
    forceDirectories(SRL_SavePath);

  // make sure it's a valid file name (Windows)
  fileName := 'SRL log ('+SRL_StartTime+').txt';
  fileName := replace(fileName, '/', '-');
  fileName := replace(fileName, ':', ' ');
  fileName := SRL_SavePath + fileName;

  try
    if (fileExists(fileName)) then
      result := appendFile(fileName)
    else
      result := createFile(fileName);
  except
    writeln('OpenSRLLogFile: '+exceptionToString(exceptionType, exceptionParam));
  end;
end;

procedure AddToSRLLog(s: string);
var
  tmpFile: integer;
begin
  writeln(s);

  if (SRL_DisableLogging) then
    exit;

  tmpFile := openSRLLogFile();

  if (tmpFile >= 0) then
    try
      writeFileString(tmpFile, '['+msToTime(getTimeRunning(), TIME_BARE)+']: '+s+#13+#10);
    except
      SRL_Warn('AddToSRLLog', 'Could not write to logfile: '+exceptionToString(exceptionType, exceptionParam), WARN_ALLVERSIONS);
    finally
      closeFile(tmpFile);
    end;
end;
