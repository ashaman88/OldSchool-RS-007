{$DEFINE SRL_SMART}
{$DEFINE SMART}
{$loadlib libsmartremote}

function GetSmartParams: TStringArray;
var
  Params: TStringArray;
  Page: String;
begin
  Page := Between('<iframe id="game" src="', '"', GetPage('http://www.runescape.com/game.ws?j=1'));
  Params := Explode(',', Page);
  Result := Params;
end;

procedure FixSmartSpeed;
var
  T: Integer;
begin
  T:= GetSystemTime + 2000;
  While (Not SmartEnabled) Do
  begin
    if (GetSystemTime >= T) Then
      Break;
    Wait(500);
  end;

  While (GetColor(382, 252) = 0) Do
  begin
    If RSReady then
      Break;
    SmartSetRefresh(SmartGetRefresh + 1);
    MMouse(4, 4, 0, 0);
    SmartSetRefresh(SmartGetRefresh - 1);
    if (GetSystemTime >= T) Then
      Break;
    Wait(500);
  end;
end;

function SmartGetClientIDs: TIntegerArray;
var
  I, Count: Integer;
begin
  Count := SmartGetClients(True);
  SetLength(Result, Count);
  If (Count > 0) then
    For I:= 0 to (Count - 1) do
      Result[I] := SmartClientID(I);
end;

procedure SmartKillClients;
var
  IDs: TIntegerArray;
  I: Integer;
begin
  IDs := SmartGetClientIDs;
  For I := High(IDs) DownTo 0 Do
    If SmartKillClient(IDs[I]) Then
      Writeln('Killed Client: ' + ToStr(IDs[I]))
    else
      Writeln('Failed To Kill Client: ' + ToStr(IDs[I]));
end;

procedure FreeOldSchoolSRL; Forward;
procedure SetupOldSchoolSRL; Forward;

procedure SixHourFix;
var
  Trash: TVariantArray;
  Refresh: Integer;
begin
  FreeOldSchoolSRL;
  Refresh := SmartGetRefresh;
  SmartKillClient(SmartCurrentClient);
  SetupOldSchoolSRL;

  try
    CallProc('SMART_FreeDebug', Trash);
    CallProc('SMART_SetupDebug', Trash);
  except
  end;

  SmartSetRefresh(Refresh);

  try
    if (not LoginPlayer) then
      srl_Warn('SixHourFix', 'Could not log in player', warn_Terminate);
  except
    srl_Warn('SixHourFix', 'Players not declared', warn_Terminate);
  end;
end;

function PairSmart(ID: Integer): Boolean;
var
  I, Count: Integer;
  IDs: TIntegerArray;
begin
  IDs := SmartGetClientIDs;
  Count := Length(IDs);
  If (Count > 0) then
    For I:= 0 To (Count - 1) Do
      If (IDs[I] = ID) and SmartPairClient(ID) then
      begin
        SetEIOSTarget('libsmartremote', ToStr(ID));
        Writeln('Paired with SMART[' + ToStr(ID) + ']');
        Result := True;
        Exit;
      end;
  Writeln('** Failed To Pair Client: ' + ToStr(ID) + '; Client Does Not exist **');
end;

function InitSmart(ForceNew: Boolean): Integer;
var
  I, Count: Integer;
  IDs: TIntegerArray;
  Params: TStringArray;
begin
  If (Not ForceNew) then
  begin
    Ids := SmartGetClientIDs;
    Count := Length(IDs);
    If (Count > 0) then
      For I:= 0 To (Count - 1) Do
      begin
        If SmartPairClient(IDs[I]) then
        begin
          Result := IDs[I];
          SetEIOSTarget('libsmartremote', ToStr(Result));
          Writeln('Paired with SMART[' + ToStr(Result) + ']');
          Exit;
        end;
      end;
  end;

  Params := GetSmartParams;
  If (Length(Params) <> 2) then
  begin
    Writeln('** Failed To Grab Smart Parameters **');
    Writeln('** Please check your internet connection/firewall **');
    TerminateScript;
    Exit;
  end;
  
  {$IFDEF SMART8}
    Result := SmartSpawnClient(ReplaceWrap(PluginPath, '\', '/', [rfReplaceAll]), 'http://oldschool' + IntToStr(The_World) + '.runescape.com/', '/1', 765, 503, 's', '', '');
  {$ELSE}
    Result := SmartSpawnClient(ReplaceWrap(PluginPath, '\', '/', [rfReplaceAll]), 'http://oldschool' + IntToStr(The_World) + '.runescape.com/', '/j1', 765, 503, 's', '', '', -1);
  {$ENDIF}
  
  If (Result > 0) Then
  begin
    try
      SetEIOSTarget('libsmartremote', ToStr(Result));
      Writeln('Loading SMART 2007');
    except
      WriteLn('** Fatal Error: Pairing Clients; Terminating Script **');
      TerminateScript;
    end;
  end else
    begin
      Writeln('** Smart Cannot Spawn Clients **');
      TerminateScript;
    end;
end;

procedure SetupSmart(ForceNewClient: Boolean);
var
  T: Integer;
begin
  T:= GetSystemTime + 120000;
  Smart_CurrentClient:= InitSmart(ForceNewClient);
  if (Smart_CurrentClient <= 0) then
  begin
    writeln('*** Smart Failed To Load ***');
    TerminateScript;
  end;

  if (SRL_SixHourFix) then
    SRL_Procs[SRL_OnRSUpdate]:= @SixHourFix;

  While (GetColor(382, 252) <> 0) Do
  begin
    if RSReady then
      break;

    Wait(100);
    if (GetTimeRunning >= 120000) then
    begin
      Writeln('*** Failed To Detect Clients ***');
      TerminateScript;
    end;
  end;
end;

function FindAndSetTarget(TitlePrefix: String; SetAsTarget: Boolean): Boolean;
var
  T : TSysProcArr;
  I : Integer;
begin
  T := GetProcesses;
  for I := High(T) downto 0 do
    if Pos(TitlePrefix, T[I].Title) <> 0 then
    begin
      Result := True;
      if SetAsTarget then SetTarget(T[I]);
      Exit;
    end;
end;

procedure GetRealMousePos(var X, Y : Integer);
var
  KMTarget, ITarget: Integer;
begin
  KMTarget := GetKeyMouseTarget;
  ITarget := GetImageTarget;
  FindAndSetTarget('SMART', True);
  GetTClient.IOManager.GetMousePos(X, Y);
  FreeTarget(GetImageTarget);
  SetKeyMouseTarget(KMTarget);
  SetImageTarget(ITarget);

  X := X - 8;
  Y := Y - 25;
end;

function IsRealMouseInBox(B : TBox): Boolean;
var
  P : TPoint;
begin
  GetRealMousePos(P.X, P.Y);
  Result := PointInBox(P, B);
end;
